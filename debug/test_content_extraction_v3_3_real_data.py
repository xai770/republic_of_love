#!/usr/bin/env python3
"""
Content Extraction Specialist v3.3 - Real Data Validation Test
==============================================================

Testing the v3.3 specialist with actual job data from the daily report.
Focus: Validating concise job description extraction and skill identification.

Input: Raw job description from Job #1 (Deutsche Bank Business Product Senior Analyst)
Expected Output: Clean, concise job description suitable for matching system
"""

import sys
import os
from pathlib import Path
import time

# Add the path to the v3.3 specialist
specialist_path = "/home/xai/Documents/republic_of_love/üèóÔ∏è_LLM_INFRASTRUCTURE/0_mailboxes/sandy@consciousness/inbox/archive/content_extraction_crisis_resolution_20250702"
sys.path.append(specialist_path)

try:
    from content_extraction_specialist_v3_3_PRODUCTION import ContentExtractionSpecialistV33
    print("‚úÖ Successfully imported ContentExtractionSpecialistV33")
except ImportError as e:
    print(f"‚ùå Failed to import ContentExtractionSpecialistV33: {e}")
    sys.exit(1)

def main():
    print("üîß CONTENT EXTRACTION SPECIALIST v3.3 - REAL DATA VALIDATION")
    print("=" * 70)
    
    # Raw job data from daily report Job #1
    raw_job_description = """Business Product Senior Analyst (d/m/w) ‚Äì Sales Campaign Management BizBanking (Data Analytics) Job ID:R0363090 Full/Part-Time: Full-time Regular/Temporary: Regular Listed: 2025-06-20 Location: Frankfurt Position Overview √úber den BereichDie Deutsche BizBanking als Teil der Unternehmensbank b√ºndelt unser Angebot f√ºr unsere Gesch√§ftskunden - vom selbst√§ndigen Freiberufler bis zum gr√∂√üeren Gesch√§ftskunden - der drei Marken Deutsche Bank, Postbank und FYRST unter einem gemeinsamen Dach. F√ºr die Deutsche Bank ist das Gesch√§ftsfeld ein strategischer Wachstumsbereich.Das Team Sales Campaign Management als Teil des Sales & Process Management BizBanking ist verantwortlich f√ºr die Entwicklung und Steuerung der Vertriebskampagnen in BizBanking in enger Zusammenarbeit mit seinen Stakeholdern aus Digital Client Solutions (DCS), den Vertriebsverantwortlichen sowie weiteren zentralen Bereichen.Ihre AufgabenMitgestaltung der vertrieblichen Wachstumsagenda f√ºr den station√§ren Vertrieb in BizBanking f√ºr die Marken Deutsche Bank und PostbankDurchf√ºhrung von Voranalysen zur Identifikation und Entwicklung geeigneter Vertriebsimpulse in Abstimmung mit den relevanten Vertriebs- und ProduktbereichenVerantwortliche Konzeption & Programmierung von Datenselektionen f√ºr ausgew√§hlte Vertriebskampagnen sowie Bereitstellung in CRM- & Kampagnen-Tools in enger Zusammenarbeit mit den verantwortlichen ZentralbereichenMitarbeit in der Weiterentwicklung der Vertriebsaktivit√§ten-Steuerung in Client Relationship Management- & Kampagnen-Tools, datenanalytischer Vertriebsimpulse sowie Verkn√ºpfung mit digitalen Leads gemeinsam mit den relevanten StakeholdernIhre F√§higkeiten und ErfahrungenErfahrung im Bankenumfeld sowie abgeschlossenes (Wirtschaftsinformatik) Studium (BA/FH/Universit√§t), abgeschlossener Bankausbildung oder vergleichbare kaufm√§nnische Ausbildung mit sehr gutem AbschlussFundierte Kenntnisse in IT, Datenmanagement und Digitalisierung, hohe Affinit√§t komplexe Datenthemen zu begleiten und Erfahrungen im Umgang mit gro√üen, teils unstrukturierten Datenpools auf unterschiedlichen PlattformenBeherrschung von Programmiersprachen (u.a. SAS, SQL, Python) auf hohem Niveau und gute Kenntnis g√§ngiger Analytics-Tools wie auch Campaigns-Tech Stacks (z.B. Adobe)Analytisches und konzeptionelles Denkverm√∂gen sowie starke Eigeninitiative und L√∂sungsorientierungSehr gute Deutsch- und Englischkenntnisse in Wort und SchriftWas wir Ihnen bietenWir bieten eine breite Palette von Leistungen, die all Ihre beruflichen und pers√∂nlichen Bed√ºrfnisse abdecken.Emotional ausgeglichenEine positive Haltung hilft uns, die Herausforderungen des Alltags zu meistern ‚Äì beruflich wie privat. Profitieren Sie von Angeboten wie Beratung in schwierigen Lebenssituationen und Angeboten zur F√∂rderung mentaler Gesundheit.K√∂rperlich fitMit Angeboten zur Aufrechterhaltung Ihrer pers√∂nlichen Gesundheit und einem f√∂rderlichen beruflichen Umfeld hilft Ihnen die Bank, k√∂rperlich fit zu bleiben. Profitieren Sie von Angeboten wie umfangreichen Check-up Untersuchungen, Impfangeboten und Beratung zur gesunden Lebensf√ºhrung.Sozial vernetztDer Austausch mit anderen er√∂ffnet uns neue Perspektiven, bringt uns beruflich wie pers√∂nlich voran und st√§rkt unser Selbstvertrauen und Wohlbefinden. Profitieren Sie von Angeboten wie Unterst√ºtzung durch den pme Familienservice, das FitnessCenter Job, flexible Arbeitszeitmodelle (bspw. Teilzeit, Jobtandem, hybrides Arbeiten) sowie einer umfangreichen Kultur der Vielfalt, Chancengleichheit und Teilhabe.Finanziell abgesichertDie Bank sichert Sie nicht nur w√§hrend Ihrer aktiven Karriere, sondern auch f√ºr die Zukunft finanziell ab und unterst√ºtzt Ihre Flexibilit√§t sowie Mobilit√§t ‚Äì egal ob privat oder beruflich. Profitieren Sie von Angeboten wie Beitragspl√§nen f√ºr Altersvorsorge, Bankdienstleistungen f√ºr Mitarbeiter*innen, Firmenfahrrad oder dem Deutschlandticket.Da die Benefits je nach Standort geringf√ºgig variieren, gehen Sie bitte bei konkreten Fragen auf Ihre Recruiter / Ihre Recruiterin zu.Die Stelle wird in Voll- und in Teilzeit angeboten.Bei Fragen zum Rekrutierungsprozess steht Ihnen Kerstin N√∂rber gerne zur Verf√ºgung.Kontakt Kerstin N√∂rber: 069-910-22155 Wir streben eine Unternehmenskultur an, in der wir gemeinsam jeden Tag das Beste geben. Dazu geh√∂ren verantwortungsvolles Handeln, wirtschaftliches Denken, Initiative ergreifen und zielgerichtete Zusammenarbeit.Gemeinsam teilen und feiern wir die Erfolge unserer Mitarbeiter*innen. Gemeinsam sind wir die Deutsche Bank Gruppe.Wir begr√º√üen Bewerbungen von allen Menschen und f√∂rdern ein positives, faires und integratives Arbeitsumfeld."""

    print("üìã Input Job Data:")
    print(f"Job Title: Business Product Senior Analyst")
    print(f"Original Length: {len(raw_job_description)} characters")
    print(f"Expected Skills: SAS, SQL, Python, Adobe, CRM tools")
    print()

    # Expected extraction from the report analysis
    expected_skills = ["SAS", "SQL", "Python", "CRM", "Adobe"]
    expected_concise_desc = "Develop and manage sales campaigns for BizBanking using data analytics, programming, and CRM tools"
    
    print("üìä Expected Results (from Daily Report):")
    print(f"Technical Skills: {expected_skills}")
    print(f"Concise Description Length: ~150 characters (not the full job description)")
    print()

    # Initialize the v3.3 specialist
    try:
        specialist = ContentExtractionSpecialistV33()
        print("‚úÖ ContentExtractionSpecialist v3.3 initialized successfully")
    except Exception as e:
        print(f"‚ùå Failed to initialize specialist: {e}")
        return

    # Run the skill extraction
    print("\nüîÑ Running v3.3 skill extraction...")
    try:
        result = specialist.extract_skills(raw_job_description)
        
        print("\n‚úÖ EXTRACTION COMPLETED SUCCESSFULLY!")
        print("=" * 50)
        
        print("\nüìã EXTRACTION RESULTS:")
        print(f"Processing Time: {result.processing_time:.2f} seconds")
        print(f"Model Used: {result.model_used}")
        print(f"Confidence: {result.accuracy_confidence}")
        print()
        
        print("üîß TECHNICAL SKILLS:")
        if result.technical_skills:
            for skill in result.technical_skills:
                print(f"  ‚Ä¢ {skill}")
        else:
            print("  ‚ùå No technical skills extracted")
        print()
        
        print("üíº BUSINESS SKILLS:")
        if result.business_skills:
            for skill in result.business_skills:
                print(f"  ‚Ä¢ {skill}")
        else:
            print("  ‚ùå No business skills extracted")
        print()
        
        print("ü§ù SOFT SKILLS:")
        if result.soft_skills:
            for skill in result.soft_skills:
                print(f"  ‚Ä¢ {skill}")
        else:
            print("  ‚ùå No soft skills extracted")
        print()
        
        print("üìä ALL SKILLS COMBINED:")
        if result.all_skills:
            for skill in result.all_skills:
                print(f"  ‚Ä¢ {skill}")
            print(f"\nTotal Skills Extracted: {len(result.all_skills)}")
        else:
            print("  ‚ùå No skills extracted at all")
        
        # Validation against expected results
        print("\nüîç VALIDATION ANALYSIS:")
        print("=" * 30)
        
        found_expected = 0
        for expected_skill in expected_skills:
            if any(expected_skill.lower() in skill.lower() for skill in result.all_skills):
                found_expected += 1
                print(f"‚úÖ Found expected skill: {expected_skill}")
            else:
                print(f"‚ùå Missing expected skill: {expected_skill}")
        
        accuracy = (found_expected / len(expected_skills)) * 100 if expected_skills else 0
        print(f"\nüìà Accuracy: {accuracy:.1f}% ({found_expected}/{len(expected_skills)} expected skills found)")
        
        # Issue Analysis
        print("\nüö® ISSUE ANALYSIS:")
        if accuracy < 80:
            print("‚ùå CRITICAL: Accuracy below 80% target")
            print("Issues identified:")
            print("  ‚Ä¢ v3.3 may not be extracting skills correctly")
            print("  ‚Ä¢ LLM prompts may need refinement")
            print("  ‚Ä¢ Job content complexity affecting extraction")
        else:
            print("‚úÖ Accuracy meets target threshold")
            
        # Recommendations
        print("\nüí° RECOMMENDATIONS FOR SANDY:")
        if not result.all_skills:
            print("üî• CRITICAL: Zero skills extracted - possible v3.3 failure")
            print("1. Check LLM model availability and connectivity")
            print("2. Validate prompts and parsing logic")
            print("3. Test with simplified job descriptions")
        elif accuracy < 80:
            print("‚ö†Ô∏è  MODERATE: Extraction quality needs improvement")
            print("1. Review v3.3 prompts for German text handling")
            print("2. Enhance skill recognition patterns")
            print("3. Consider fallback extraction strategies")
        else:
            print("‚úÖ v3.3 extraction working as expected")
            print("1. Monitor extraction consistency across job types")
            print("2. Validate integration with matching pipeline")
        
    except Exception as e:
        print(f"\n‚ùå EXTRACTION FAILED: {e}")
        print("\nüö® DEBUGGING INFORMATION:")
        print("1. Check if Ollama is running: curl http://localhost:11434/api/tags")
        print("2. Verify model availability: ollama list")
        print("3. Test with simple input first")
        print("4. Check network connectivity and timeout settings")
        
        print("\nüí° IMMEDIATE ACTIONS FOR SANDY:")
        print("1. Validate v3.3 environment setup")
        print("2. Test with minimal job description input")
        print("3. Check extraction specialist error handling")
        print("4. Consider fallback to simpler extraction approach")

if __name__ == "__main__":
    main()
